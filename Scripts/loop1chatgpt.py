# Read the next article title
next_article = read_next_article()

if next_article is not None:
    # Use the retrieved article title as input to OpenAI GPT-3.5 Turbo
    response = openai.ChatCompletion.create(
        model="gpt-3.5-turbo",
        messages=[
            {"role": "user", "content": "From now on, you will only reply with YouTube scripts on the topic that I provide. The YouTube scripts should include random facts, informative information, and only spoken text should be generated ,Do not specify who is speaking the text for such as host or narrator.If you understand, say OK."},
            {"role": "assistant", "content": "OK."},
            #{"role": "user", "content":"Narendra Modi"},
            #{"role": "assistant", "content": "'Title: Narendra Modi - India\'s Visionary Leader | Incredible Facts and Achievements\n\nIntro:\n[Upbeat music playing]\nNarrator: Welcome back to our channel,"},
            #{"role": "user", "content":"You Will not include any text that will not be actually spoken in the actuall youtube script for example title, [Upbeat music playing] etc,just write the text that will acually be spoken,if you understand say ok"},
            #{"role": "assistant", "content": "OK."},  
            {"role": "user", "content": next_article}

        ],
        max_tokens=1000  # Adjust the number of tokens as needed
    )

    # Print the response generated by GPT-3.5 Turbo

    print(response.choices[0].message.content)

    # For Printing Syntax
    #print(response)

else:
    print("No more articles to read.")